MODULE_NAME=mchw_riscv
obj-m += $(MODULE_NAME).o 
PMCSCHED-objs= pmcsched.o dummy_plugin.o group_plugin.o	busybcs_plugin.o
$(MODULE_NAME)-objs +=  mchw_core.o mc_experiments.o pmu_config_perf.o cbuffer.o monitoring_mod.o syswide.o  pmctrack_stub.o $(PMCSCHED-objs)

SYMLINKS=$(patsubst %.o,%.c,$($(MODULE_NAME)-objs))
SOURCES=$(patsubst %.o,../%.c,$($(MODULE_NAME)-objs))

USER_CFLAGS ?=
#USER_CFLAGS ?= -ggdb -O0
EXTRA_CFLAGS := $(USER_CFLAGS) -DCONFIG_PMC_PERF -DODROID -I$(src)/../include -I$(src)/..

KERNEL_TREE?=/scratch/tfg-android/linux
XCOMP?=riscv64-unknown-linux-gnu-
# KERNEL_OUT=$(KERNEL_TREE)

.PHONY: debug

.SUFFIXES: .ko .debug

all:	$(SYMLINKS)
	make MODULE_VERSION=kk ARCH=riscv CROSS_COMPILE=$(XCOMP) -C $(KERNEL_TREE) O=$(KERNEL_OUT)  M=$(PWD)  modules

clean:
	make ARCH=riscv CROSS_COMPILE=$(XCOMP) -C $(KERNEL_TREE) O=$(KERNEL_OUT) M=$(PWD)  clean
	-rm -f $(SYMLINKS) ../*.o

$(SYMLINKS): $(SOURCES)
	@for file in $(SYMLINKS) ; do if [ ! -f $$file ]; then  ln -s ../$$file . ; fi ; done
	
.ko.debug: 
	objcopy --only-keep-debug $< $@
	strip --strip-debug --strip-unneeded $<
	objcopy --add-gnu-debuglink=$@ $<


debug: ${MODULE_NAME}.debug 



		
